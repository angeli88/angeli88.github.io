[{"content":"遇到问题 远程电脑显示器关闭后，重启电脑，teamviewer连接会显示黑屏。\n解决方法 主机情况 系统：Ubuntu 18.04\n显卡：Intel核显\n安装软件 # 因为ubuntu版本为18.04，故安装18.04版本的软件 # 可用sudo apt search 软件名搜索所有版本，选择与系统相应的版本即可 sudo apt install xserver-xorg-core-hwe-18.04 sudo apt install xserver-xorg-video-dummy-hwe-18.04 --fix-missing 修改配置文件(会默认使用虚拟显示器) 配置文件为/usr/share/X11/xorg.conf.d/xorg.conf,修改文件内容如下：\nSection \u0026#34;Monitor\u0026#34; Identifier \u0026#34;Monitor0\u0026#34; HorizSync 28.0-80.0 VertRefresh 48.0-75.0 # https://arachnoid.com/modelines/ # 1920x1080 @ 60.00 Hz (GTF) hsync: 67.08 kHz; pclk: 172.80 MHz Modeline \u0026#34;1920x1080_60.00\u0026#34; 172.80 1920 2040 2248 2576 1080 1081 1084 1118 -HSync +Vsync EndSection Section \u0026#34;Device\u0026#34; Identifier \u0026#34;Card0\u0026#34; Driver \u0026#34;dummy\u0026#34; VideoRam 256000 EndSection Section \u0026#34;Screen\u0026#34; DefaultDepth 24 Identifier \u0026#34;Screen0\u0026#34; Device \u0026#34;Card0\u0026#34; Monitor \u0026#34;Monitor0\u0026#34; SubSection \u0026#34;Display\u0026#34; Depth 24 Modes \u0026#34;1920x1080_60.00\u0026#34; EndSubSection EndSection 保存后重启系统即可，使用teamviewer连接就可以看到图形界面了。\n查看显示器信息 输入 xranr命令即可查看。\n显示器信息如下所示：\nxrandr: Failed to get size of gamma for output default Screen 0: minimum 320 x 240, current 1920 x 1080, maximum 1920 x 1080 default connected primary 1920x1080+0+0 0mm x 0mm 1920x1080 60.00* 1680x1050 70.00 60.00 1400x1050 70.00 60.00 1600x900 60.00 1280x1024 75.00 60.00 1440x900 60.00 1400x900 60.00 1280x960 60.00 1368x768 60.00 1360x768 60.00 1280x800 60.00 1152x864 75.00 70.00 60.00 1280x720 60.00 1024x768 75.00 70.00 60.00 1024x576 60.00 960x600 60.00 832x624 75.00 960x540 60.00 800x600 75.00 72.00 60.00 56.00 840x525 70.00 60.00 864x486 60.00 700x525 70.00 60.00 800x450 60.00 640x512 75.00 60.00 720x450 60.00 700x450 60.00 640x480 75.00 73.00 60.00 684x384 60.00 680x384 60.00 640x400 60.00 576x432 75.00 70.00 60.00 640x360 60.00 512x384 75.00 70.00 60.00 512x288 60.00 416x312 75.00 480x270 60.00 400x300 75.00 72.00 60.00 56.00 432x243 60.00 320x240 75.00 73.00 60.00  注意事项\n\u0026ldquo;cannot open display\u0026quot;报错：export DISPLAY=:0.0即可\n ","date":"2021-04-20T19:48:43+08:00","permalink":"https://angeli88.github.io/posts/ubuntu/virtualdisplay/","title":"ubuntu18.04 使用虚拟显示器"},{"content":"题目 给你一个按 非递减顺序 排序的整数数组 nums，返回 每个数字的平方 组成的新数组，要求也按 非递减顺序 排序。\n排序解法 所有元素平方后排序。\n时间：$O(nlogn)$ 空间:$O(n)$\nclass Solution { public int[] sortedSquares(int[] nums) { int len=nums.length; for(int i=0;i\u0026lt;len;i++){ nums[i]=nums[i]*nums[i]; } Arrays.sort(nums); return nums; } } 双指针 原数组为有序数组，若有负数，则数组两边均为绝对值较大的元素，双指针比较两边元素绝对值大小，大的则插入新数组右边，指针前移，当指针相遇时则完成整个过程。\n时间：$O(n)$ 空间：$O(1)$\nclass Solution { public int[] sortedSquares(int[] nums) { int len=nums.length; int[] res=new int[len]; for(int i=0,j=len-1,pos=len-1;i\u0026lt;=j;pos--){ if(Math.abs(nums[i])\u0026gt;Math.abs(nums[j])){ res[pos]=nums[i]*nums[i]; ++i; }else{ res[pos]=nums[j]*nums[j]; --j; } } return res; } } ","date":"2021-04-08T20:25:14+08:00","permalink":"https://angeli88.github.io/posts/leetcode/977/","title":"977-有序数组的平方"},{"content":"题目 数组中占比超过一半的元素称之为主要元素。给定一个整数数组，找到它的主要元素。若没有，返回-1。\n题解 1.排序后比较中间元素 直接对数组进行排序，排序后取数组中间元素，计算其占比是否超过一半。\n时间：$O(nlogn)$ 空间：$O(1)$\nclass Solution { public int majorityElement(int[] nums) { Arrays.sort(nums); int len=nums.length; int midNum=nums[len/2]; int count=0; for(int num:nums){ if(num==midNum){ count++; } } if(count\u0026gt;len/2){ return midNum; } return -1; } } 2.哈希表计数 创建一个map，将数组里每个元素的个数存储起来，再对map进行判断，若有个数大于一半的则为主要元素\n时间：$O(n^2)$ 空间:$O(n)$\nclass Solution { public int majorityElement(int[] nums) { HashMap\u0026lt;Integer,Integer\u0026gt; hashMap=new HashMap\u0026lt;Integer,Integer\u0026gt;(); for(int num:nums){ if(hashMap.containsKey(num)){ hashMap.put(num,hashMap.get(num)+1); }else{ hashMap.put(num,1); } } for(Integer i:hashMap.keySet()){ if(hashMap.get(i)\u0026gt;nums.length/2){ return i; } } return -1; } } 3.摩尔投票法 两两抵消，若为主要元素，则其与剩下元素一一抵消之后还会有剩余元素；\n设一count,从第一个元素开始，若与接下来元素不同，则count\u0026ndash;；相同则count++；当count=0时从当前元素重新开始前面的算法。如果最终count\u0026gt;0，则统计该元素个数，大于一半则为主要元素。\n时间：$O(n)$ 空间:$O(1)$\nclass Solution { public int majorityElement(int[] nums) { int temp=nums[0]; int count=0; for(int num:nums){ if(count==0){ temp=num; count=1; }else{ if(temp==num){ count++; }else{ count--; } } } if (count\u0026gt;0){ int n=0; for(int num:nums){ if(temp==num){ n++; } } if(n\u0026gt;nums.length/2){ return temp; } } return -1; } } ","date":"2021-04-06T23:22:31+08:00","permalink":"https://angeli88.github.io/posts/leetcode/%E9%9D%A2%E8%AF%95%E9%A2%981710/","title":"面试题17.10"},{"content":"frp服务端配置 [common] bind_port = 7000 dashboard_port=7500 token=token dashboard_user=user dashboard_pwd=pwd frp客户端配置 通用配置 [common] server_addr = server_ip server_port = 7000 token = token 端口转发配置 [ssh] type = tcp local_ip = 127.0.0.1 local_port = 22 remote_port = 7001 socks5代理配置 [test_sock5] type = tcp remote_port =8010 plugin = socks5 use_encryption = true socks5配置之后，浏览器可使用proxy switchyomege插件配置socks5代理，这样就可以访问一些内网服务了。\n","date":"2021-04-06T21:56:29+08:00","permalink":"https://angeli88.github.io/posts/%E8%BD%AF%E4%BB%B6/frp/","title":"frp代理访问内网"}]